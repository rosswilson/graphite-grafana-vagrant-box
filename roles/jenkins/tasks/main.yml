---
- name: Add jenkins apt repository key
  apt_key:
    url: "{{ jenkins_repo_key_url }}"
    state: present

- name: Add jenkins apt repository
  apt_repository:
    repo: "{{ jenkins_repo_url }}"
    state: present
    update_cache: yes

- name: Ensure Jenkins is installed
  apt: name=jenkins state=installed update_cache=true

- name: Configure jenkins settings
  include: settings.yml

- name: Ensure Jenkins is started and runs on startup.
  service: name=jenkins state=started enabled=yes

- name: Wait for Jenkins to start up before proceeding.
  shell: "curl -D - --silent http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}/cli/"
  register: result
  until: (result.stdout.find("403 Forbidden") != -1) or (result.stdout.find("200 OK") != -1) and (result.stdout.find("Please wait while") == -1)
  retries: "{{ jenkins_connection_retries }}"
  delay: "{{ jenkins_connection_delay }}"
  changed_when: false

- name: Get the jenkins-cli jarfile from the Jenkins server.
  get_url:
    url: "http://{{ jenkins_hostname }}:{{ jenkins_http_port }}{{ jenkins_url_prefix }}/jnlpJars/jenkins-cli.jar"
    dest: "{{ jenkins_jar_location }}"
  register: jarfile_get
  until: "'OK' in jarfile_get.msg or 'file already exists' in jarfile_get.msg"
  retries: "{{ jenkins_connection_retries }}"
  delay: "{{ jenkins_connection_delay }}"

- name: Ensure .ssh directory exists for jenkins user
  file: dest=/var/lib/jenkins/.ssh state=directory owner=jenkins group=jenkins

- name: Create SSH key for Jenins to access GitHub
  command: ssh-keygen -N '' -f /var/lib/jenkins/.ssh/id_rsa creates=/var/lib/jenkins/.ssh/id_rsa
  become_user: jenkins
